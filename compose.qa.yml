services:
  backend:
    container_name: ${REPO_NAME}-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - ./logs/django:/home/app/code/logs:rw
      - ./static:/home/app/code/static:rw
      - ./media:/home/app/code/media:rw
    ports:
      - ${BACKEND_PORT}:8000
    command: prod
    depends_on:
      - redis
      - celery
    develop:
      watch:
        - action: sync+restart
          path: ./backend
          target: /home/app/code
        - action: rebuild
          path: ./backend/poetry.lock
        - action: rebuild
          path: ./backend/Dockerfile

  frontend:
    container_name: ${REPO_NAME}-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env
    ports:
      - ${FRONTEND_PORT}:3000
    depends_on:
      - backend
    develop:
      watch:
        - action: rebuild
          path: ./frontend

  redis:
    container_name: ${REPO_NAME}-redis
    image: redis:alpine
    restart: unless-stopped

  celery:
    container_name: ${REPO_NAME}-celery
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env
    command: celery
    volumes:
      - ./logs/celery:/home/app/code/logs:rw
      - ./logs/cron:/var/log:rw
    depends_on:
      - redis
    develop:
      watch:
        - action: sync+restart
          path: ./backend
          target: /home/app/code
        - action: rebuild
          path: ./backend/poetry.lock
        - action: rebuild
          path: ./backend/Dockerfile

  blog:
    container_name: ${REPO_NAME}-blog
    image: ghost:5-alpine
    restart: unless-stopped
    depends_on:
      - blog-db
    ports:
      - ${BLOG_PORT}:2368
    env_file:
      - ./.env
    environment:
      url: ${WEBSITE_URL}/blog
      mail__transport: SMTP
      mail__options__host: ${SMTP_HOST}
      mail__options__port: ${SMTP_PORT}
      mail__options__auth__user: ${SMTP_USER}
      mail__options__auth__pass: ${SMTP_PASSWORD}
      mail__from: ${DEFAULT_FROM_EMAIL}
      database__client: mysql
      database__connection__host: blog-db
      database__connection__user: root
      database__connection__password: ${BLOG_DB_PASSWORD}
      database__connection__database: ghost
      NODE_ENV: production
    volumes:
      - ./blog/content:/var/lib/ghost/content

  blog-db:
    container_name: ${REPO_NAME}-blog-db
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${BLOG_DB_PASSWORD}
    volumes:
      - ./blog/db:/var/lib/mysql
