services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    volumes:
      - ./backend:/home/app/code:rw
    command: dev
    depends_on:
      - redis
      - celery
    networks:
      ntwrk:
        aliases:
          - backend
          - api.backend

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - ./frontend/src:/code/src:rw
      - /code/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - ntwrk

  redis:
    container_name: redis
    image: redis:alpine
    networks:
      - ntwrk

  celery:
    container_name: celery
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    volumes:
      - ./backend:/home/app/code:rw
    command: celery
    depends_on:
      - redis
    networks:
      - ntwrk

  blog:
    container_name: blog
    image: ghost:5-alpine
    restart: always
    ports:
      - 3001:2368
    environment:
      url: http://localhost:3001
      mail__transport: SMTP
      mail__options__host: ${SMTP_HOST}
      mail__options__port: ${SMTP_PORT}
      mail__options__auth__user: ${SMTP_USER}
      mail__options__auth__pass: ${SMTP_PASSWORD}
      mail__from: ${DEFAULT_FROM_EMAIL}
      database__client: sqlite3
      database__connection__filename: content/data/ghost-test.db
      NODE_ENV: development
    volumes:
      - ghost:/var/lib/ghost/content

volumes:
  ghost:

networks:
  ntwrk:
